@import '/src/common/theme.css';

html,
body {
  font-family: 'SUIT', sans-serif;
}

/* 리셋을 따로 안했기 때문에, 컨텐트 박스로 동작해서
기본적인 박스 사이징을 보더 박스로 하겠다는 선언 */
body *,
body *::before,
body *::after {
  box-sizing: border-box;
}

/* flex 파헤치기 */
/* 플렉스 컨테이너 관련 속성 */
/* 플렉스 컨테이너에 값을 줬을 때 영향을 주는건 직계 자식만 가능 */
.case-01 {
  margin-block-start: 600px;
  display: flex;
  /* flex-direction: row; - float로 배치한것처럼 나란히 공백없이 배치됨 - 안줘도 기본으로 됨
  flex-wrap: nowrap; - 넘쳤을 때 줄바꿈 금지(기본속성), 줄바꿈으로 하고 싶다면 wrap으로 주기*/
  /* flex-direction 속성과 flex-wrap 속성을 단축해서 지정할 때 */
  flex-flow: row wrap;
  border: 1px solid red;
  /* padding: 10px; */
  inline-size: 622px;
  block-size: 522px;
  justify-content: center;
  align-items: center;
  align-content: center; /* 가운데 정렬 */
  /* row-gap, column-gap을 함께 지장할 수 있는 단축 속성 */
  /* gap: 20px 40px; */
  column-gap: 50px;

  [class*='item'] /* 클래스 이름에 "item"이 포함된 모든 요소를 선택하는 선택자 */ {
    /* margin-block: 10px; - 위아래 여백 - nomal flow 일 때만 겹침 독립적인 요소가 되면 안겹침*/
    border: 1px solid currentColor;
    background: var(--pastel-yellow);
    /* inline-size: 100px;
    block-size: 100px; */
    text-align: center;
    /* align-content: center; */
    /* 기존에 세로 기준 가운데 정렬을 지원하지 않을 때 사용하던 트릭 */
    /* line-height: 100px; */
  }

  .item1 {
    /* inline-size: 200px; */
    font-size: 48px;
  }

  .item2 {
    font-size: 30px;
  }
}

/* 플렉스 아이템 관련 속성 */
.case-02 {
  border: 1px solid green;
  width: 502px;
  inline-size: 502px;
  display: flex;
  flex-flow: row nowrap;

  [class^='item'] {
    border: 1px solid currentColor;
    /* width: 100px;
    inline-size: 100px;
    height: 100px;
    block-size: 100px; */
    text-align: center;
    align-content: center;
    /* flex-basis: 200px;
    flex-shrink: 1;
    flex-grow: 0; */
    /* flex-grow, flex-shrink, flex-basis 속성으 단축 표기 */
    flex: 0 1 150px;

    &:nth-child(even) {
      order: -1;
      /* flex-grow: 2; */
    }
  }
}
